/*
 * FileChooserDialog.java
 *
 * Created on December 24, 2008, 3:52 AM
 */

package itgr23hax;

import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JOptionPane;

/**
 *
 * @author  pat
 */
public class FileChooserDialog extends javax.swing.JDialog {
    
    boolean forR23Orig;
    String sFile;
    
    /** Creates new form FileChooserDialog */
    public FileChooserDialog(java.awt.Frame parent, boolean modal, boolean _forR23Orig) {
        super(parent, modal);
        sFile = "";
        initComponents();
        forR23Orig = _forR23Orig;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleAction(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showDialogMessage(String msg, boolean error) {
        JOptionPane.showMessageDialog(this, msg, "R23 Editor",
                error ? JOptionPane.ERROR_MESSAGE : JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void handleAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleAction
        System.out.println("File action: " + evt.getActionCommand());
        if (evt.getActionCommand().equals("CancelSelection")) {
            this.setVisible(false);
        } else if (evt.getActionCommand().equals("ApproveSelection")) {
            File f = jFileChooser1.getSelectedFile();
            String path = f.getPath();
            try {
                String hash = ITGR23MMain.getMD5FileHash(path);
                if (hash.equals("bf4226aae272d364ff22f6d40a9c2ae8") || !forR23Orig) {
                    sFile = path;
                    this.setVisible(false);
                } else {
                    showDialogMessage("File is not original r23 executable", true);
                }
            } catch (FileNotFoundException e) {
                if (forR23Orig) {
                    showDialogMessage(path + ": " + e.getMessage(), true);
                } else {
                    sFile = path;
                    this.setVisible(false);
                }
            } catch (Exception e) {
                sFile = "";
                showDialogMessage("Unhandled Exception: " + e.getMessage(), true);
                //this.setVisible(false);
            }
        }
    }//GEN-LAST:event_handleAction
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
    
}
